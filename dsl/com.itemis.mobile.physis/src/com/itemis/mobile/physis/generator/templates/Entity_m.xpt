«IMPORT com::itemis::mobile::physis::physis»

«EXTENSION templates::Extensions»

«DEFINE moduleFile FOR Entity-»
«FILE moduleFileName()-»
//
//  «moduleFileName()»
//  [TODO: projectName]
//
//  Created by [TODO: authorname] on [TODO: generatedDate].
//  [TODO: copyright string]
//

#import "«headerFileName()»"
#import "DataManager.h"

@implementation «entityClassName()»

«EXPAND propertySynthesize FOREACH this.attributes-»

«EXPAND factories FOR this-»
«EXPAND json FOR this-»
@end
«ENDFILE»
«ENDDEFINE»

«DEFINE propertySynthesize FOR Attribute-»
@dynamic «this.name»;
«ENDDEFINE»

«DEFINE factories FOR Entity-»
«entityContructor()» {
	NSManagedObjectModel *mom = [DataManager managedObjectModel];
	NSManagedObjectContext *moc = [DataManager managedObjectContext];
	NSEntityDescription *«entityDescriptionName().toFirstLower()» = [[mom entitiesByName] objectForKey:@"«this.entityName()»"];
	«LET this.entityName().toFirstLower() AS variable-»
	«this.entityName()» *«variable» = [[«this.entityName()» alloc] initWithEntity:«entityDescriptionName().toFirstLower()» insertIntoManagedObjectContext:moc];
	«FOREACH this.attributes AS attr-»
	«variable».«attr.attributeName()» = «attr.attributeName()»;
	«ENDFOREACH-»
	return «variable»;	
	«ENDLET-»
}
«ENDDEFINE»

«DEFINE json FOR Entity»
- (id)proxyForJson {
	return [NSDictionary dictionaryWithObjectsAndKeys:
	«FOREACH this.attributes AS attr-»
		«attr.name», @"«attr.name»",
	«ENDFOREACH-»
		nil
	];
}
«ENDDEFINE»