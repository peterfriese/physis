import com::itemis::mobile::physis::physis;

entities(DataModel this):
	this.types.typeSelect(Entity);
	
entityClassName(Entity this):
	this.name.toFirstUpper();
	
headerFileName(Entity this):
	entityClassName() + '.h';
	
typeDeclaration(Attribute this):
	this.type.typeDeclaration();
	
typeDeclaration(Type this):
	this.name + (this.isPrimitiveType() ? ' ' : ' *');
		
isPrimitiveType(Type this):
	switch (this.name) {
		case 'NSInteger': true
		default: false
	};
	
entityContructor(Entity this):
	'+(' + entityClassName() + ' *)' + this.attributes.first().entityConstructorMessageParameterDeclarationFirst() + ' ' + this.attributes.withoutFirst().entityConstructorMessageParameterDeclaration().toString(' ');
	
entityConstructorMessageParameterDeclarationFirst(Attribute this):
	this.entity().name.toFirstLower() + 'With' + attributeName().toFirstUpper() + ':' + parameterDeclaration() + attributeName();
	
entityConstructorMessageParameterDeclaration(Attribute this):
	attributeName() + ':' + parameterDeclaration() + attributeName();
	
parameterDeclaration(Attribute this):
	'(' + typeDeclaration() + ')';	
	
moduleFileName(Entity this):
	entityClassName() + '.m';
	
datamanagerClassName(DataModel this):
	"DataManager";
	
headerFileName(DataModel this):
	this.datamanagerClassName() + ".h";
	
moduleFileName(DataModel this):
	this.datamanagerClassName() + ".m";
	
managedClassName(Entity this):
	this.name.toFirstUpper();

entityName(Entity this):
	this.name.toFirstUpper();
	
entityDescriptionName(Entity this):
	this.entityName() + "Entity";
	
attributeName(Attribute this):
	this.name.toFirstLower();
	
attributeDescriptionName(Attribute this):
	this.attributeName() + "Attribute";
	
typeName(Attribute this):
	this.type.name;
	
attributeType(Attribute this):
	this.typeName() + "AttributeType";
	
entityAttributeDescriptionCollectionName(Entity this):
	this.name.toFirstLower() + "Properties";
	
entityAttributeDescriptionCollectionName(Attribute this):
	this.entity().name.toFirstLower() + "Properties";
	
entity(Attribute this):
	(Entity)this.eContainer();